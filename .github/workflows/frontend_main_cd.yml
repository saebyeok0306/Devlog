name: Frontend Continuous Delivery

on:
  push:
    paths:
      - "frontend/**"
    branches:
      - main
  workflow_dispatch:
    inputs:

permissions: write-all

env:
  ZIP_NAME: "frontend.zip"
  APP_TARGET_PATH: "frontend/"
  APP_FOLDER_PATH: "/home/app/frontend"

jobs:
  # 사전 작업
  setup:
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: frontend
    outputs:
      build-cache-key: ${{ steps.build-cache.outputs.key }}
      current-datetime: ${{ steps.datetime.outputs.datetime }}
    steps:
      - uses: actions/checkout@v4

      - name: check
        run: ls -al

      - name: Get current date and time
        id: datetime
        run: echo "datetime=$(date '+%Y-%m-%d_%H-%M-%S')" >> $GITHUB_OUTPUT

      - name: Generate build cache key
        id: build-cache
        run: echo "key=$(echo ${{ runner.os }}-npm-${{ hashFiles('**//package-lock.json') }})" >> $GITHUB_OUTPUT

  build:
    needs: setup
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js 16
        uses: actions/setup-node@v4
        with:
          node-version: 16

      - name: Cache Npm packages
        id: cache-npm
        uses: actions/cache@v4
        with:
          path: |
            ~/node_modules
          key: ${{ needs.setup.outputs.build-cache-key }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Cache Check
        if: steps.cache-npm.outputs.cache-hit == 'true'
        run: echo 'Npm cache hit!'

      - name: Install package
        run: npm install

      - name: Build with Node.js
        run: CI=false npm run build

      - name: Make zip build file
        run: zip -qq -r ./${{ env.ZIP_NAME }} ./build
        shell: bash

      # (Actions에서 생성한 파일은 권한을 수정해야 scp로 보낼 때 오류가 안생김)
      - name: Modify permissions
        run: chmod o+rwx ${{ env.ZIP_NAME }}

      - name: Send build file
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "${{ env.APP_TARGET_PATH }}${{ env.ZIP_NAME }}"
          target: ${{ env.APP_FOLDER_PATH }}
          strip_components: 1

      - name: Restart Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ env.APP_FOLDER_PATH }}
            rm -rf build
            unzip -o ${{ env.ZIP_NAME }}
