name: Backend Continuous Delivery

on:
  push:
    paths:
      - "backend/**"
    branches:
      - main
  workflow_dispatch:
    inputs:

permissions: write-all

env:
  DEVLOG_GOOGLE_CLIENT_ID: ${{secrets.DEVLOG_GOOGLE_CLIENT_ID}}
  DEVLOG_GOOGLE_CLIENT_SECRET: ${{secrets.DEVLOG_GOOGLE_CLIENT_SECRET}}
  APP_TARGET_PATH: "backend/build/libs/devlog.jar"
  APP_FOLDER_PATH: "/home/app/backend"

jobs:
  # 사전 작업
  setup:
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: backend
    outputs:
      build-cache-key: ${{ steps.build-cache.outputs.key }}
      current-datetime: ${{ steps.datetime.outputs.datetime }}
    steps:
      - uses: actions/checkout@v4

      - name: check
        run: ls -al

      - name: Get current date and time
        id: datetime
        run: echo "datetime=$(date '+%Y-%m-%d_%H-%M-%S')" >> $GITHUB_OUTPUT

      - name: Generate build cache key
        id: build-cache
        run: echo "key=$(echo build-${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }})" >> $GITHUB_OUTPUT

  build:
    needs: setup
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v4

      - name: Gradle Caching
        id: cache-gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ needs.setup.outputs.build-cache-key }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Cache Check
        if: steps.cache-gradle.outputs.cache-hit == 'true'
        run: echo 'Gradle cache hit!'

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Upload test report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-report
          path: backend/build/reports/tests/test

      - name: Stop Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ secrets.APP_FOLDER_PATH }}
            ls -al
            sh script/stop.sh

      # (Actions에서 생성한 파일은 권한을 수정해야 scp로 보낼 때 오류가 안생김)
      - name: Modify permissions
        run: chmod o+rwx build/libs/devlog.jar

      - name: Send jar
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: ${{ env.APP_TARGET_PATH }}
          target: ${{ env.APP_FOLDER_PATH }}
          strip_components: 3

      - name: Restart Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ env.APP_FOLDER_PATH }}
            sh script/start.sh ${{ needs.setup.outputs.current-datetime }}
