name: Backend LLM Continuous Delivery

on:
  push:
    paths:
      - "backend/llm-service/**"
    branches:
      - main
  workflow_dispatch:

permissions: write-all

env:
  LLM_ZIP_NAME: "llm-service.zip"
  LLM_ZIP_TARGET_PATH: "backend/llm-service/llm-service.zip"
  LLM_DOCKER_TARGET_PATH: "backend/llm-service/Dockerfile.prod"
  LLM_FOLDER_PATH: "/home/app/backend/llm-service"

jobs:
  # 사전 작업
  setup:
    runs-on: ubuntu-22.04

    outputs:
      current-datetime: ${{ steps.datetime.outputs.datetime }}

    steps:
      - uses: actions/checkout@v4

      - name: Get current date and time
        id: datetime
        run: echo "datetime=$(date '+%Y-%m-%d_%H-%M-%S')" >> $GITHUB_OUTPUT

      - name: docker-compose.prod.yml hash key
        id: compose-hash
        run: |
          echo "DOCKER_KEY=$(sha256sum docker-compose.prod.yml | awk '{ print $1 }')" >> $GITHUB_ENV

      # 캐시가 존재하면 파일 전송 스킵
      - name: Check cache for docker-compose.prod.yml
        id: cache-check
        uses: actions/cache@v4
        with:
          path: ./docker-compose.prod.yml
          key: ${{ runner.os }}-docker-compose-prod-${{ env.DOCKER_KEY }}

      - name: Modify permissions
        run: chmod o+rwx docker-compose.prod.yml

      - name: Send docker-compose.prod.yml
        if: steps.cache-check.outputs.cache-hit != 'true'
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "docker-compose.prod.yml"
          target: "/home/app"

  build:
    needs: setup
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: backend/llm-service
    steps:
      - uses: actions/checkout@v4

      - name: Make zip file
        run: zip -qq -r ./${{ env.LLM_ZIP_NAME }} . -x ".git/*" ".github/*"

      # (Actions에서 생성한 파일은 권한을 수정해야 scp로 보낼 때 오류가 안생김)
      - name: Modify permissions of Zip file
        run: chmod o+rwx ${{ env.LLM_ZIP_NAME }}

      - name: Send Zip file
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: ${{ env.LLM_ZIP_TARGET_PATH }}
          target: ${{ env.LLM_FOLDER_PATH }}
          strip_components: 2

      - name: Modify permissions Dockerfile.prod
        run: chmod o+rwx Dockerfile.prod

      - name: Send Dockerfile.prod
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: ${{ env.LLM_DOCKER_TARGET_PATH }}
          target: ${{ env.LLM_FOLDER_PATH }}
          strip_components: 2

      - name: Setup Service
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/app/backend/llm-service
            unzip -o ${{ env.LLM_ZIP_NAME }}
            rm ${{ env.LLM_ZIP_NAME }}
            sh build.image.sh

  startup:
    needs:
      - build
    runs-on: ubuntu-22.04
    steps:
      - name: Restart Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/app
            docker-compose -f docker-compose.prod.yml up -d --build llm-service
