name: backend CI/CD

on:
  push:
    paths:
      - "backend/**"
    branches:
      - main
    pull_request:
      types: [opened, synchronize, reopened]
  workflow_dispatch:
    inputs:

permissions: write-all

env:
  DEVLOG_GOOGLE_CLIENT_ID: ${{secrets.DEVLOG_GOOGLE_CLIENT_ID}}
  DEVLOG_GOOGLE_CLIENT_SECRET: ${{secrets.DEVLOG_GOOGLE_CLIENT_SECRET}}

jobs:
  # 사전 작업
  setup:
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: ./backend
    outputs:
      build-cache-key: ${{ steps.build-cache.outputs.key }}
    steps:
      - uses: actions/checkout@v4
        with:
          path: backend

      - name: Generate build cache key
        id: build-cache
        run: echo "key=$(echo build-${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }})" >> $GITHUB_OUTPUT

      - name: CI start time
        shell: bash
        run: echo "START_TIME=$(TZ=":Asia/Seoul" date -R|sed 's/.....$//')"

  build:
    needs: setup
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: ./backend

    steps:
      - uses: actions/checkout@v4
        with:
          path: backend

      - name: Gradle Caching
        id: cache-gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ needs.setup.outputs.build-cache-key }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Cache Check
        if: steps.cache-gradle.outputs.cache-hit == 'true'
        run: echo 'Gradle cache hit!'

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Upload test report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-report
          path: backend/build/reports/tests/test

      # (Actions에서 생성한 파일은 권한을 수정해야 scp로 보낼 때 오류가 안생김)
      - name: Modify permissions
        run: chmod o+rwx build/libs/devlog.jar

      - name: Send jar
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: ${{ secrets.APP_TARGET_PATH }}
          target: ${{ secrets.APP_FOLDER_PATH }}
          strip_components: 3

  unit-test:
    needs: setup
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: ./backend
    steps:
      - uses: actions/checkout@v4
        with:
          path: backend

      - name: Cache Gradle packages
        id: cache-gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ needs.setup.outputs.build-cache-key }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Cache Check
        if: steps.cache-gradle.outputs.cache-hit == 'true'
        run: echo 'Gradle cache hit!'

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: "temurin"

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run unit tests
        run: ./gradlew test

      - name: Upload unit test HTML report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: unit-test-report
          path: backend/build/reports/tests/test

      - name: publish unit test results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: backend/build/test-results/test/TEST-*.xml

      - name: add comments to a pull request
        uses: mikepenz/action-junit-report@v4
        if: github.event_name == 'pull_request' && always()
        with:
          report_paths: backend/build/test-results/test/TEST-*.xml
